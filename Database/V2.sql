CREATE TABLE `CategoryMaterial` (
	`id` INTEGER AUTO_INCREMENT,
	`category` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `MaterialStatus` (
	`id` INTEGER AUTO_INCREMENT,
	`status` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `RequestStatus` (
	`id` INTEGER AUTO_INCREMENT,
	`status` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `Role` (
	`id` INTEGER AUTO_INCREMENT,
	`role` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `Permission` (
	`id` INTEGER AUTO_INCREMENT,
	`url` VARCHAR(255) NOT NULL,
	`status` BOOLEAN NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `User` (
	`id` INTEGER AUTO_INCREMENT,
	`username` VARCHAR(255) NOT NULL,
	`fullname` VARCHAR(255) NOT NULL,
	`phone` VARCHAR(255) NOT NULL,
	`password` VARCHAR(255) NOT NULL,
	`email` VARCHAR(255) NOT NULL,
	`address` VARCHAR(255) NOT NULL,
	`gender` BOOLEAN,
	`birthDate` DATE,
	`image` VARCHAR(255),
	`status` BOOLEAN DEFAULT true,
	`roleId` INTEGER NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `Permission_Role` (
	`id` INTEGER AUTO_INCREMENT,
	`permissionId` INTEGER NOT NULL,
	`roleId` INTEGER NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `Materials` (
	`id` INTEGER AUTO_INCREMENT,
	`name` VARCHAR(255) NOT NULL,
	`unit` VARCHAR(255) NOT NULL,
	`image` VARCHAR(255),
	`statusId` INTEGER NOT NULL,
	`categoryId` INTEGER NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `Supplier` (
	`id` INTEGER AUTO_INCREMENT,
	`name` VARCHAR(255) NOT NULL,
	`phone` VARCHAR(255) NOT NULL,
	`address` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


CREATE TABLE `materials_Supplier` (
	`id` INTEGER AUTO_INCREMENT,
	`materialId` INTEGER NOT NULL,
	`supplierId` INTEGER NOT NULL,
	`note` VARCHAR(255),
	PRIMARY KEY(`id`)
);


CREATE TABLE `InputWarehouse` (
	`id` INTEGER AUTO_INCREMENT,
	`dateInput` DATE NOT NULL,
	`userId` INTEGER,
	PRIMARY KEY(`id`)
);


CREATE TABLE `OutputWarehouse` (
	`id` INTEGER AUTO_INCREMENT,
	`date` DATE NOT NULL,
	`userId` INTEGER,
	PRIMARY KEY(`id`)
);


CREATE TABLE `InputDetail` (
	`id` INTEGER AUTO_INCREMENT,
	`quantity` INTEGER NOT NULL,
	`inputWarehouseId` INTEGER,
	`requestDetailId` INTEGER,
	`inputPrice` DOUBLE,
	PRIMARY KEY(`id`)
);


CREATE TABLE `OutputDetail` (
	`id` INTEGER AUTO_INCREMENT,
	`quantity` INTEGER NOT NULL,
	`requestDetailId` INTEGER,
	`outputWarehouseId` INTEGER,
	PRIMARY KEY(`id`)
);


CREATE TABLE `Request` (
	`id` INTEGER AUTO_INCREMENT,
	`date` DATE,
	`statusId` INTEGER,
	`userId` INTEGER,
	`note` VARCHAR(255),
	PRIMARY KEY(`id`)
);


CREATE TABLE `requestDetail` (
	`id` INTEGER NOT NULL AUTO_INCREMENT,
	`requestId` INTEGER NOT NULL,
	`materialId` INTEGER NOT NULL,
	`quantity` INTEGER NOT NULL,
	`note` VARCHAR(255) NOT NULL,
	PRIMARY KEY(`id`)
);


ALTER TABLE `User`
ADD FOREIGN KEY(`roleId`) REFERENCES `Role`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Permission_Role`
ADD FOREIGN KEY(`permissionId`) REFERENCES `Permission`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Permission_Role`
ADD FOREIGN KEY(`roleId`) REFERENCES `Role`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Materials`
ADD FOREIGN KEY(`statusId`) REFERENCES `MaterialStatus`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Materials`
ADD FOREIGN KEY(`categoryId`) REFERENCES `CategoryMaterial`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `materials_Supplier`
ADD FOREIGN KEY(`materialId`) REFERENCES `Materials`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `materials_Supplier`
ADD FOREIGN KEY(`supplierId`) REFERENCES `Supplier`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `InputDetail`
ADD FOREIGN KEY(`inputWarehouseId`) REFERENCES `InputWarehouse`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `OutputDetail`
ADD FOREIGN KEY(`outputWarehouseId`) REFERENCES `OutputWarehouse`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Request`
ADD FOREIGN KEY(`statusId`) REFERENCES `RequestStatus`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Request`
ADD FOREIGN KEY(`userId`) REFERENCES `User`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `requestDetail`
ADD FOREIGN KEY(`requestId`) REFERENCES `Request`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `requestDetail`
ADD FOREIGN KEY(`materialId`) REFERENCES `Materials`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `InputWarehouse`
ADD FOREIGN KEY(`userId`) REFERENCES `User`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `OutputWarehouse`
ADD FOREIGN KEY(`userId`) REFERENCES `User`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `InputDetail`
ADD FOREIGN KEY(`requestDetailId`) REFERENCES `requestDetail`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `OutputDetail`
ADD FOREIGN KEY(`requestDetailId`) REFERENCES `requestDetail`(`id`)
ON UPDATE NO ACTION ON DELETE NO ACTION;

-- sự sửa đổi database:
ALTER TABLE Request
ADD COLUMN type ENUM('Import', 'Export') NOT NULL; 

ALTER TABLE Request ADD approvedBy INT; -- FK tới User(id)
	ALTER TABLE Request ADD FOREIGN KEY (approvedBy) REFERENCES User(id);
